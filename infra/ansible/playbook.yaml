---
- name: Instalar k6 na instância Ubuntu via binário (v0.57.0)
  hosts: k6
  become: true
  tasks:
    - name: Atualizar o apt e instalar dependências
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 3600

    - name: Baixar o binário do k6 v0.57.0
      get_url:
        url: "https://github.com/grafana/k6/releases/download/v0.57.0/k6-v0.57.0-linux-amd64.tar.gz"
        dest: /tmp/k6-v0.57.0-linux-amd64.tar.gz

    - name: Extrair o arquivo tar.gz do k6
      unarchive:
        src: /tmp/k6-v0.57.0-linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Mover o binário do k6 para /usr/local/bin
      command: mv /tmp/k6-v0.57.0-linux-amd64/k6 /usr/local/bin/k6

    - name: Garantir que o binário do k6 tenha permissões de execução
      file:
        path: /usr/local/bin/k6
        mode: '0755'

    - name: Verificar a instalação do k6
      command: k6 version
      register: k6_version

    - name: Mostrar a versão do k6
      debug:
        msg: "A versão do k6 instalada é: {{ k6_version.stdout }}"
    
    # Instalar InfluxDB no servidor k6
    - name: Baixar e instalar o InfluxDB
      apt:
        name: influxdb
        state: present

    - name: Iniciar e habilitar o serviço InfluxDB
      service:
        name: influxdb
        state: started
        enabled: yes

    - name: Verificar a instalação do InfluxDB
      command: influxd version
      register: influxdb_version

    - name: Mostrar a versão do InfluxDB
      debug:
        msg: "A versão do InfluxDB instalada é: {{ influxdb_version.stdout }}"

    # Instalar Prometheus e Node Exporter no k6
    - name: Baixar e instalar o Prometheus no k6
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v2.45.0/prometheus-2.45.0.linux-amd64.tar.gz"
        dest: /tmp/prometheus-2.45.0.linux-amd64.tar.gz

    - name: Extrair o arquivo tar.gz do Prometheus
      unarchive:
        src: /tmp/prometheus-2.45.0.linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Mover o binário do Prometheus para /usr/local/bin
      command: mv /tmp/prometheus-2.45.0.linux-amd64/prometheus /usr/local/bin/prometheus

    - name: Garantir que o binário do Prometheus tenha permissões de execução
      file:
        path: /usr/local/bin/prometheus
        mode: '0755'

    - name: Verificar a instalação do Prometheus
      command: prometheus --version
      register: prometheus_version

    - name: Alterar Localhost por 0.0.0.0
      shell: sed -i 's/localhost:9090/0.0.0.0:9090/' /tmp/prometheus-2.45.0.linux-amd64/prometheus.yml

    - name: Criar pasta data
      shell: sudo mkdir -p /tmp/prometheus-2.45.0.linux-amd64/data

    - name: Dar permissão a pasta
      shell: sudo chown -R ubuntu:ubuntu /tmp/prometheus-2.45.0.linux-amd64

    - name: Configurar o prometheus.yaml
      shell: nohup prometheus --config.file=/tmp/prometheus-2.45.0.linux-amd64/prometheus.yml --storage.tsdb.path=/tmp/prometheus-2.45.0.linux-amd64/data/ > /tmp/prometheus.log 2>&1 & 

    - name: Mostrar a versão do Prometheus
      debug:
        msg: "A versão do Prometheus instalada é: {{ prometheus_version.stdout }}"

    - name: Instalar o Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz"
        dest: /tmp/node_exporter-1.6.1.linux-amd64.tar.gz

    - name: Extrair o arquivo tar.gz do Node Exporter
      unarchive:
        src: /tmp/node_exporter-1.6.1.linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Mover o binário do Node Exporter para /usr/local/bin
      command: mv /tmp/node_exporter-1.6.1.linux-amd64/node_exporter /usr/local/bin/node_exporter

    - name: Garantir que o binário do Node Exporter tenha permissões de execução
      file:
        path: /usr/local/bin/node_exporter
        mode: '0755'

    - name: Verificar a instalação do Node Exporter
      command: node_exporter --version
      register: node_exporter_version

    - name: Mostrar a versão do Node Exporter
      debug:
        msg: "A versão do Node Exporter instalada é: {{ node_exporter_version.stdout }}"

    # Criar o arquivo de unidade do Node Exporter
    - name: Criar arquivo de unidade do systemd para o Node Exporter
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          After=network.target

          [Service]
          User=root
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=multi-user.target
      notify:
        - Reiniciar o Node Exporter

    # Habilitar e iniciar o Node Exporter
    - name: Habilitar e iniciar o Node Exporter
      systemd:
        name: node_exporter
        state: started
        enabled: yes

  # Notificação para reiniciar o Node Exporter
  handlers:
    - name: Reiniciar o Node Exporter
      systemd:
        name: node_exporter
        state: restarted

- name: Copiar arquivos para a instância AWS
  hosts: k6
  become: yes
  tasks:
    - name: Copiar arquivos da pasta local para a instância AWS
      copy:
        src: /home/rfahham/projetos/testes-performance/testes/serverest
        # src: ../testes/serverest
        dest: /tmp
        mode: '0755'
        remote_src: no
        
- name: Instalar Grafana na instância Ubuntu
  hosts: grafana
  become: true
  tasks:
    - name: Baixar a chave GPG do repositório Grafana
      apt_key:
        url: "https://packages.grafana.com/gpg.key"
        state: present

    - name: Adicionar o repositório do Grafana
      apt_repository:
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        state: present

    - name: Atualizar o apt e instalar o Grafana
      apt:
        update_cache: yes
        name: grafana
        state: present

    - name: Iniciar e habilitar o serviço Grafana
      service:
        name: grafana-server
        state: started
        enabled: yes

    - name: Verificar a instalação do Grafana
      command: grafana-server -v
      register: grafana_version

    - name: Mostrar a versão do Grafana
      debug:
        msg: "A versão do Grafana instalada é: {{ grafana_version.stdout }}"


- name: Instalar Serverest na instância Ubuntu
  hosts: serverest
  become: true
  tasks:
    - name: Atualizar o apt e instalar dependências
      apt:
        update_cache: yes
        upgrade: yes
        cache_valid_time: 3600

    - name: Instalar Node.js e npm (necessário para o npx)
      apt:
        name:
          - nodejs
          - npm
        state: present

    - name: Instalar o Serverest usando npx
      package:
        name: npm
        state: present
    
    - name: Instalar o Serverest globalmente
      npm:
        name: serverest
        global: yes
        state: present
    
    - name: Instalar dependências do Serverest
      shell: npm install /usr/local/lib/node_modules/serverest
      args:
        chdir: /usr/local/lib/node_modules/serverest

    - name: Iniciar o Serverest
      # shell: node /usr/local/lib/node_modules/serverest/src/server.js
      shell: sudo nohup node /usr/local/lib/node_modules/serverest/src/server.js > ~/serverest.log 2>&1 &
      args:
        chdir: /usr/local/lib/node_modules/serverest
      async: 600
      poll: 0 
    
    - name: Verificar a instalação do Serverest
      shell: serverest --version
      register: serverest_version
      ignore_errors: yes
    
    - name: Exibir a versão do Serverest
      debug:
        msg: "A versão do Serverest é: {{ serverest_version.stdout }}"
    
    # - name: Exibir a saída do Serverest
    #   debug:
    #     msg: "{{ serverest_output.stdout }}"

    # Instalar Prometheus e Node Exporter no Serverest
    - name: Baixar e instalar o Prometheus no Serverest
      get_url:
        url: "https://github.com/prometheus/prometheus/releases/download/v2.45.0/prometheus-2.45.0.linux-amd64.tar.gz"
        dest: /tmp/prometheus-2.45.0.linux-amd64.tar.gz

    - name: Extrair o arquivo tar.gz do Prometheus
      unarchive:
        src: /tmp/prometheus-2.45.0.linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Mover o binário do Prometheus para /usr/local/bin
      command: mv /tmp/prometheus-2.45.0.linux-amd64/prometheus /usr/local/bin/prometheus

    - name: Garantir que o binário do Prometheus tenha permissões de execução
      file:
        path: /usr/local/bin/prometheus
        mode: '0755'

    - name: Verificar a instalação do Prometheus
      command: prometheus --version
      register: prometheus_version
    
    - name: Alterar Localhost por 0.0.0.0
      shell: sed -i 's/localhost:9090/0.0.0.0:9090/' /tmp/prometheus-2.45.0.linux-amd64/prometheus.yml

    - name: Criar pasta data
      shell: sudo mkdir -p /tmp/prometheus-2.45.0.linux-amd64/data

    - name: Dar permissão a pasta
      shell: sudo chown -R ubuntu:ubuntu /tmp/prometheus-2.45.0.linux-amd64

    - name: Configurar o prometheus.yaml
      shell: nohup prometheus --config.file=/tmp/prometheus-2.45.0.linux-amd64/prometheus.yml --storage.tsdb.path=/tmp/prometheus-2.45.0.linux-amd64/data/ > /tmp/prometheus.log 2>&1 & 

    - name: Mostrar a versão do Prometheus
      debug:
        msg: "A versão do Prometheus instalada é: {{ prometheus_version.stdout }}"

    - name: Instalar o Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz"
        dest: /tmp/node_exporter-1.6.1.linux-amd64.tar.gz

    - name: Extrair o arquivo tar.gz do Node Exporter
      unarchive:
        src: /tmp/node_exporter-1.6.1.linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes

    - name: Mover o binário do Node Exporter para /usr/local/bin
      command: mv /tmp/node_exporter-1.6.1.linux-amd64/node_exporter /usr/local/bin/node_exporter

    - name: Garantir que o binário do Node Exporter tenha permissões de execução
      file:
        path: /usr/local/bin/node_exporter
        mode: '0755'

    - name: Verificar a instalação do Node Exporter
      command: node_exporter --version
      register: node_exporter_version

    - name: Mostrar a versão do Node Exporter
      debug:
        msg: "A versão do Node Exporter instalada é: {{ node_exporter_version.stdout }}"

    # Criar o arquivo de unidade do Node Exporter
    - name: Criar arquivo de unidade do systemd para o Node Exporter
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Prometheus Node Exporter
          After=network.target

          [Service]
          User=root
          ExecStart=/usr/local/bin/node_exporter

          [Install]
          WantedBy=multi-user.target
      notify:
        - Reiniciar o Node Exporter

    # Habilitar e iniciar o Node Exporter
    - name: Habilitar e iniciar o Node Exporter
      systemd:
        name: node_exporter
        state: started
        enabled: yes

  # Notificação para reiniciar o Node Exporter
  handlers:
    - name: Reiniciar o Node Exporter
      systemd:
        name: node_exporter
        state: restarted

       
